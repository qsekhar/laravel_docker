version: "3.9"

networks:
  laravel_enviroment:

services:
  server:
    # image: 'nginx:stable-alpine'
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - 8080:80
      # - 443:443
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    container_name: laravel_enviroment_server
    networks:
      - laravel_enviroment
    # extra_hosts:
    #  - "host.docker.internal:host-gateway"
  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    container_name: php_laravel_enviroment
    networks:
      - laravel_enviroment
  mysql:
    image: mysql:8.0.1
    restart: unless-stopped
    tty: true
    container_name: mysql_laravel_enviroment
    env_file:
      - src/.env
    ports:
      - 3306:3306
    networks:
      - laravel_enviroment
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      TZ: "UTC"
    volumes:
      - ./resources/mysql:/var/lib/mysql
  redis:
    image: redis:alpine
    container_name: redis_laravel_enviroment
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - laravel_enviroment
    command: redis-server --appendonly yes --replica-read-only no
  scheduler:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: scheduler_laravel_enviroment
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "php", "artisan", "schedule:work" ]
    depends_on:
      - mysql
      - composer
    networks:
      - laravel_enviroment
  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog_laravel_enviroment
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel_enviroment
  composer:
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    networks:
      - laravel_enviroment
  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    depends_on:
      - mysql
      - composer
    networks:
      - laravel_enviroment

